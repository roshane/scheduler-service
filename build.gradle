plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'checkstyle'

}

group = 'com.aeon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

tasks.register('initGitProperties') {
    group = "Custom"
    description = "Create [git.properties]"
    doLast {
        println("Creating git.properties")
    }
}

tasks.register("listPlugins") {
    group = "Custom"
    description = "List project plugins"
    doLast {
        project.plugins.each {
            println(it)
        }
    }
}

checkstyle {
    toolVersion = "8.32"
    configFile = file("$project.rootDir/config/check_style.xml")
    showViolations = true
    ignoreFailures = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

test.mustRunAfter initGitProperties
